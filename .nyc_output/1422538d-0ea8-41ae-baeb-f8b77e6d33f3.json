{"/home/usuario/DSI-modi7/src/BubbleSort/BubbleSort.ts":{"path":"/home/usuario/DSI-modi7/src/BubbleSort/BubbleSort.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":28}},"3":{"start":{"line":14,"column":8},"end":{"line":22,"column":9}},"4":{"start":{"line":14,"column":21},"end":{"line":14,"column":22}},"5":{"start":{"line":15,"column":12},"end":{"line":21,"column":13}},"6":{"start":{"line":15,"column":25},"end":{"line":15,"column":26}},"7":{"start":{"line":16,"column":16},"end":{"line":20,"column":17}},"8":{"start":{"line":17,"column":33},"end":{"line":17,"column":40}},"9":{"start":{"line":18,"column":20},"end":{"line":18,"column":42}},"10":{"start":{"line":19,"column":20},"end":{"line":19,"column":39}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":54}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":20}},"13":{"start":{"line":27,"column":0},"end":{"line":27,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":18},"end":{"line":25,"column":5}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":16},"end":{"line":20,"column":17}},"type":"if","locations":[{"start":{"line":16,"column":16},"end":{"line":20,"column":17}},{"start":{"line":16,"column":16},"end":{"line":20,"column":17}}],"line":16}},"s":{"0":1,"1":1,"2":2,"3":2,"4":2,"5":6,"6":6,"7":12,"8":0,"9":0,"10":0,"11":2,"12":2,"13":1},"f":{"0":2},"b":{"0":[0,12]},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI-modi7/src/BubbleSort/BubbleSort.ts","sources":["/home/usuario/DSI-modi7/src/BubbleSort/BubbleSort.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,UAAU;IACrB;;;OAGG;IACH,OAAO,CAAC,IAAc;QACpB,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,6BAA6B;QAElD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACzB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACtB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;iBACpB;aACF;SACF;QACD,OAAO,CAAC,GAAG,CAAC,0BAA0B,IAAI,EAAE,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AApBD,gCAoBC","sourcesContent":["import {Strategy} from \"../Strategy/strategy\";\n\n/**\n * BubbleSort implements the strategy pattern.\n */\nexport class BubbleSort implements Strategy {\n  /**\n   * Execute() sorts the data using the bubble sort algorithm.\n   * @param data Number[]\n   */\n  execute(data: number[]): number[] {\n    data = data.slice(); // creates a copy of the data\n\n    for (let i = 0; i < data.length; i++) {\n      for (let j = 0; j < data.length - 1; j++) {\n        if (data[j] > data[j + 1]) {\n          const swap = data[j];\n          data[j] = data[j + 1];\n          data[j + 1] = swap;\n        }\n      }\n    }\n    console.log(`Bubble sort applied to ${data}`);\n    return data;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b39fad44de346ab2147d991358430e7661c6360a","contentHash":"65a353e43f91f973ace57ef9bc4d9fadc2b44b733239a22357bc625412d41333"},"/home/usuario/DSI-modi7/src/MergeSort/MergeSort.ts":{"path":"/home/usuario/DSI-modi7/src/MergeSort/MergeSort.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":15,"column":8},"end":{"line":15,"column":20}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":18},"end":{"line":16,"column":5}},"line":12}},"branchMap":{},"s":{"0":1,"1":1,"2":2,"3":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI-modi7/src/MergeSort/MergeSort.ts","sources":["/home/usuario/DSI-modi7/src/MergeSort/MergeSort.ts"],"names":[],"mappings":";;;AACA;;GAEG;AACH,MAAa,SAAS;IACpB;;;OAGG;IACH,OAAO,CAAC,IAAc;QACpB,gDAAgD;QAEhD,6DAA6D;QAG7D,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAbD,8BAaC","sourcesContent":["import {Strategy} from \"../Strategy/strategy\";\n/**\n * Class MergeSort implements the strategy pattern.\n */\nexport class MergeSort implements Strategy {\n  /**\n   * Execute() sorts the data using the merge sort algorithm.\n   * @param data Number[]\n   */\n  execute(data: number[]) {\n    // console.log(`Merge sort applied to ${data}`);\n\n    // desarrollo mergesort en typescript con un array de numeros\n\n\n    return data;\n  }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e0cbbb40c5aa043b6714baaf4a4ef42818bcfc2b","contentHash":"ad0fbe3277421cf91f725861cc20121c07f8572e33137183aacdf93e854e03aa"},"/home/usuario/DSI-modi7/src/Solver/Solver.ts":{"path":"/home/usuario/DSI-modi7/src/Solver/Solver.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":9,"column":8},"end":{"line":9,"column":25}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":33}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"5":{"start":{"line":24,"column":8},"end":{"line":24,"column":33}},"6":{"start":{"line":31,"column":8},"end":{"line":31,"column":29}},"7":{"start":{"line":37,"column":8},"end":{"line":37,"column":41}},"8":{"start":{"line":40,"column":0},"end":{"line":40,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":32},"end":{"line":11,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":14},"end":{"line":18,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":26},"end":{"line":25,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":18},"end":{"line":32,"column":5}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":12},"end":{"line":38,"column":5}},"line":36}},"branchMap":{},"s":{"0":1,"1":1,"2":2,"3":2,"4":1,"5":2,"6":3,"7":0,"8":1},"f":{"0":2,"1":1,"2":2,"3":3,"4":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI-modi7/src/Solver/Solver.ts","sources":["/home/usuario/DSI-modi7/src/Solver/Solver.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,MAAM;IACjB,YAAoB,IAAc,EAAU,QAAkB;QAA1C,SAAI,GAAJ,IAAI,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAC9D,CAAC;IACD;;;OAGG;IACH,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED;;;OAGG;IACH,WAAW,CAAC,QAAkB;QAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IACD;;;OAGG;IACH,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED;;OAEG;IACH,KAAK;QACH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;CACF;AAhCD,wBAgCC","sourcesContent":["import { Strategy } from \"../Strategy/strategy\";\n\n/**\n * Class Solver describes the context in which the strategy is used.\n */\nexport class Solver {\n  constructor(private data: number[], private strategy: Strategy) {\n  }\n  /**\n   * Data() returns the data used.\n   * @returns Number[]\n   */\n  getData() {\n    return this.data;\n  }\n\n  /**\n   * setStrategy sets the strategy to be used.\n   * @param strategy Type is Strategy\n   */\n  setStrategy(strategy: Strategy) {\n    this.strategy = strategy;\n  }\n  /**\n   * getStrategy returns the strategy used.\n   * @returns Strategy used\n   */\n  getStrategy() {\n    return this.strategy;\n  }\n\n  /**\n   * Logic() solves the problem using the strategy.\n   */\n  logic() {\n    this.strategy.execute(this.data);\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1e8a231c78408df8b0fac2c02a5f7701ebfd60d3","contentHash":"9fecb4b23badf28a671162a091b364ff884ed9cbe7d7351dcbef04bc8490705b"}}